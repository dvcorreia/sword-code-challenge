services:
  recommendations:
    build: .
    ports:
      - "8000:8000"
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: ${POSTGRES_USER:-postgres}
      PG_PASSWORD: ${POSTGRES_PASSWORD:-mysecretpassword}
      PG_DATABASE: ${POSTGRES_DB:-recommendations}
      OPA_URL: http://opa:8181
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
  recommendations-consumer:
    build: .
    entrypoint: clinical-recommendations-logger
    command: "--duckdb recommendations-logging-db.duckdb"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - recommendations-logging-db.duckdb:/usr/src/app/recommendations-logging-db.duckdb
  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mysecretpassword}
      POSTGRES_DB: ${POSTGRES_DB:-recommendations}
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: "CMD-SHELL pg_isready -d ${POSTGRES_DB:-recommendations} -U ${POSTGRES_USER:-postgres}"
      interval: 5s
      timeout: 5s
      retries: 5
  oidc:
    image: dexidp/dex:v2.42.0
    ports:
      - "5556:5556"
    volumes:
      - ./misc/dex.dev.yaml:/etc/dex/config.yaml
  opa:
    image: openpolicyagent/opa:1.1.0
    command:
      - "run"
      - "--server"
      - "--config-file=/opa-conf.yaml"
      - "--addr=0.0.0.0:8181"
    ports:
      - "8181:8181"
    volumes:
      - ./misc/opa-conf.yaml:/opa-conf.yaml
    depends_on:
      - policy-host-server
  policy-host-server:
    image: nginx:1.27.0-alpine
    volumes:
      - ./rules/bundle.tar.gz:/usr/share/nginx/html/bundle.tar.gz
  redis:
    image: redis:7.4
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

volumes:
    postgres:
    redis: